class Product:
    def __init__(self,name,price,deal_price,rating,you_save):
        self.name=name
        self.price=price
        self.rating=rating
        self.deal_price=deal_price
        self.you_save=you_save
    def display_product_details(self):
        print("Name : {}".format(self.name))
        print("Price : {}".format(self.price))
        print("Deal Price : {}".format(self.deal_price))
        print("Rating : {}".format(self.rating))
        print("You save : {}".format(self.you_save))
        
    def get_deal_price(self):
        return self.deal_price
class ElectronicItem(Product):
    def __init__(self,name,price,deal_price,rating,you_save,warrenty_in_months):
        super().__init__(name,price,deal_price,rating,you_save) # OVERRIDING
        self.warrenty_in_months=warrenty_in_months
    def display_product_details(self):
        super().display_product_details()#OVERRIDING
        print("Warrenty In Months : {}".format(self.warrenty_in_months))
class Grocery(Product):
    def __init__(self,name,price,deal_price,rating,you_save,expiry_date):
        super().__init__(name,price,deal_price,rating,you_save)#OVERRIDING
        self.expiry_date=expiry_date
    def display_product_details(self):
        super().display_product_details()#OVERRIDING
        print("Expiry Date : {}".format(self.expiry_date))
class Order:
    order_charges={
        "Speed":200,
        "Normal":70
    }
    def __init__(self,delivery_method,delivery_addess):
        self.items=[]
        self.delivery_method=delivery_method
        self.delivery_addess=delivery_addess
    def add_items(self,product,quantity):
        item=(product,quantity)
        self.items.append(item)
    def display_order_details(self):
        print("delivery_addess : {}".format(self.delivery_addess))
        print("delivery_method : {}".format(self.delivery_method))
        print("Product")
        print("---------------------------------------------")
        for item,quantity in self.items:
            item.display_product_details()
            print("Quantity : {}".format(quantity))
            print()
            
        total_bill=self.get_total_bill()
        print("Total Bill : {}".format(total_bill))
    
    def get_total_bill(self):
        total_bill=0
        for item,quantity in self.items:
            price=item.get_deal_price()*quantity
            total_bill+=price
        total_bill+=Order.order_charges[self.delivery_method]
        return total_bill
    
    @classmethod
    def update_delevery_charges(cls,delivery_method,charges):
        cls.order_charges[delivery_method]=charges
        
        
        
tv=ElectronicItem("Tv",10000,8000,4.5,2000,12)
milk=Grocery("Milk",100,80,4.6,20,2025)
my_order=Order("Normal","1-2A-3D")
my_order.add_items(tv,5)#COMPOSITION class method ki values ga instance ni pampadanni composistion antam tv,milk instance
my_order.add_items(milk,1)#COMPOSITION class method ki values ga instance ni pampadanni composistion antam tv,milk instance
my_order.update_delevery_charges("Normal",100)
my_order.display_order_details()
